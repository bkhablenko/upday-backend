openapi: 3.0.0
info:
  title: upday-backend
  version: 0.1.0

servers:
  - url: http://localhost:8080/api/v1

tags:
  - name: articles
    description: News articles.
  - name: authors
    description: Article authors.

paths:
  /articles:
    get:
      summary: Search articles.
      tags:
        - articles
      parameters:
        - name: authorId
          in: query
          description: |
            Include articles authored by the given person, including those with more than one author.
          schema:
            $ref: '#/components/schemas/AuthorId'
        - name: tags
          in: query
          description: |
            Include articles that have *at least one* tag from the list.
          schema:
            type: array
            items:
              type: string
            example:
              - health
              - politics
              - science
        - name: publicationDateStart
          in: query
          description: |
            Include articles published no earlier than the given date.
          schema:
            type: string
            format: date
            example: 2023-04-01
        - name: publicationDateEndExclusive
          in: query
          description: |
            Include articles published no later than the given date.
          schema:
            type: string
            format: date
            example: 2023-04-15
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  articles:
                    type: array
                    items:
                      $ref: '#/components/schemas/ArticleItem'
        '400':
          description: Bad Request
        default:
          $ref: '#/components/responses/ErrorResponse'

  /authors:
    get:
      summary: List all authors.
      tags:
        - authors
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  authors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorItem'
        default:
          $ref: '#/components/responses/ErrorResponse'

  /authors/{authorId}:
    get:
      summary: Get author by ID.
      tags:
        - authors
      parameters:
        - $ref: '#/components/parameters/authorId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorItem'
        '404':
          description: Not Found
        default:
          $ref: '#/components/responses/ErrorResponse'

components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic

  parameters:
    authorId:
      name: authorId
      in: path
      required: true
      description: Author ID.
      schema:
        $ref: '#/components/schemas/AuthorId'

  schemas:
    ArticleId:
      type: string
      format: uuid
      example: e41728d0-d5cf-449c-85f7-e8c1e1047364
    Article:
      type: object
      properties:
        title:
          type: string
          example: Song of the Sausage Creature
        description:
          type: string
          example: A wild ride on a Ducati, celebrating the thrill and culture of motorcycling.
        body:
          type: string
        tags:
          type: array
          items:
            type: string
          example:
            - motorcycles
        publicationDate:
          type: string
          format: date
          example: 1995-03-01
    ArticleItem:
      allOf:
        - $ref: '#/components/schemas/Article'
      properties:
        id:
          $ref: '#/components/schemas/ArticleId'
        authors:
          type: array
          items:
            $ref: '#/components/schemas/AuthorItem'

    AuthorId:
      type: string
      format: uuid
      example: e41728d0-d5cf-449c-85f7-e8c1e1047364
    Author:
      type: object
      properties:
        fullName:
          type: string
          example: Hunter S. Thompson
    AuthorItem:
      allOf:
        - $ref: '#/components/schemas/Author'
      properties:
        id:
          $ref: '#/components/schemas/AuthorId'

  responses:
    ErrorResponse:
      description: Something went awfully wrong.
      content:
        application/json:
          schema:
            type: object
            properties:
              timestamp:
                type: string
                format: date-time
                example: 2023-04-15T12:30:45.990Z
              status:
                type: integer
                example: 500
              error:
                type: string
                example: Internal Server Error
              message:
                type: string
                example: Something went awfully wrong.
              path:
                type: string
                example: /v1/api/**
